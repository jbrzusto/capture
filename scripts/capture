#!/bin/bash

# start capturing radar data

# filename template
DATE=`date +"%Y-%m-%dT%H-%M-%S.%3N"`
OUTFILE="force_$DATE.sqlite"
LOGFILE="pushlog_$DATE.txt"

# samples per pulse
NUMSAMP=3000

# decimation rate (1, 2, 8, ...)
DECIM=1

# transfer port - the port used on local ethernet transfer
# from redpitaya digitizer to this computer
PORT=12345

# set the output directory
if [[ -d /media/FORCE_radar_1 ]]; then
    DATADIR=/media/FORCE_radar_1
elif [[ -d /media/FORCE_radar_2 ]]; then
    DATADIR=/media/FORCE_radar_2
else
    DATADIR=/home/radar/data
fi

# parse parameters
# -d DECIM : decimation rate.  Must be 1, 2, or 8 to get every sample, averages of every 2 samples, or averages of every 8 samples.
# the decimation parameter -d sets sampling rate (125e6 / d) and hence range resolution 3.0e8 / (125e6 / d) / 2
# so d=1 gives 1.2 metres

if [[ "$1" == "-d" ]]; then
    DECIM=$2
    shift 2
fi

if [[ "$1" == "-n" ]]; then
    NUMSAMP=$2
    shift 2;
fi

# the -n parameter is the number of samples per pulse to capture, so at the above resolution,
# the total range is 3000 * 1.2 = 3.6 km

# Listen on port PORT for raw pulse data from the redpitaya digitizer, and pipe this into
# the capture process.  "-d" means don't hang up on no stdin, which is required for running
# netcat in background as a pure listener

( netcat -d -l $PORT | /home/radar/capture/rpcapture -d $DECIM -n $NUMSAMP -T $DATADIR/$OUTFILE) &

sleep 1

# start the digdar digitizing process on the redpitaya
ssh -f root@rp "(/opt/bin/digdar -d $DECIM -n $NUMSAMP | /opt/bin/netcat 10.42.0.2 $PORT)&"

sleep 1

# start generating and pushing live images
/home/radar/capture/pushLiveImages.R --samples $NUMSAMP --sampling_rate 125e6 --decim $DECIM > $DATADIR/$LOGFILE 2>&1 &
